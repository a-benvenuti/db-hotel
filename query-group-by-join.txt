GROUP BY
1) Conta gli ospiti raggruppandoli per anno di nascita
Risposta 1:
SELECT YEAR(`date_of_birth`) AS 'anno_di_nascita', COUNT(`id`) AS 'num_clienti'
FROM `ospiti` 
GROUP BY `anno_di_nascita`
ORDER BY `anno_di_nascita` DESC;

2) Somma i prezzi dei pagamenti raggruppandoli per status
Risposta 2:
SELECT `status`, SUM(`price`) AS 'totale'
FROM `pagamenti` 
GROUP BY `status`;

3) Conta quante volte è stata prenotata ogni stanza
Risposta 3:
SELECT `stanza_id`, COUNT(`id`) AS 'numero_di_prenotazioni'
FROM `prenotazioni` 
GROUP BY `stanza_id`
ORDER BY `numero_di_prenotazioni` DESC;
--------------------------------oppure-------------------------------------
SELECT `stanze`.`room_number`, COUNT(`prenotazioni`.`id`) AS 'totale_prenotazioni'
FROM `prenotazioni`
INNER JOIN `stanze`
ON `prenotazioni`.`stanza_id` = `stanze`.`id`
GROUP BY `stanze`.`room_number`
ORDER BY `totale_prenotazioni` DESC
LIMIT 1
--------------------------------oppure-------------------------------------
SELECT MAX(`totale_prenotazioni`)
FROM(SELECT `stanze`.`room_number`, COUNT(`prenotazioni`.`id`) AS 'totale_prenotazioni'
	 FROM `prenotazioni`
	 INNER JOIN `stanze`
	 ON `prenotazioni`.`stanza_id` = `stanze`.`id`
	 GROUP BY `stanze`.`room_number`) risultato

4) Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti
Risposta 4:
SELECT DATE_FORMAT(`created_at`, "%H : %i : %s") AS 'orario_prenotazione', COUNT(`id`) AS 'num_prenotazioni'
FROM `prenotazioni`
GROUP BY `orario_prenotazione`
ORDER BY `orario_prenotazione` ASC;

5) Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?
Risposta 5:
SELECT `ospite_id`, COUNT(`id`) AS 'tot_prenotazioni' 
FROM `prenotazioni_has_ospiti` 
GROUP BY `ospite_id`
ORDER BY `tot_prenotazioni` DESC;


JOIN
1) Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?
Risposta 1:
SELECT `prenotazioni_has_ospiti`.`ospite_id`,`ospiti`.`lastname` , `ospiti`.`name`, COUNT(`prenotazioni_has_ospiti`.`id`) AS 'tot_prenotazioni' 
FROM `prenotazioni_has_ospiti`
INNER JOIN `ospiti`
ON `prenotazioni_has_ospiti`.`ospite_id` = `ospiti`.`id`
GROUP BY `prenotazioni_has_ospiti`.`ospite_id`
HAVING `tot_prenotazioni` > 2
ORDER BY `tot_prenotazioni` DESC;

2) Stampare tutti gli ospiti per ogni prenotazione
Risposta 2:
SELECT `ospiti`.`name`, `ospiti`.`lastname`, `prenotazioni_has_ospiti`.`created_at`, `prenotazioni_has_ospiti`.`prenotazione_id`
FROM `prenotazioni_has_ospiti`
INNER JOIN `ospiti`
ON `prenotazioni_has_ospiti`.`ospite_id` = `ospiti`.`id`;

3) Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018
Risposta 3:
SELECT `paganti`.`name`, `paganti`.`lastname`, `pagamenti`.`price`, `ospiti`.`lastname` AS 'ospite', `prenotazioni`.`created_at`
FROM `paganti` 
LEFT JOIN `pagamenti` 
ON `paganti`.`id` = `pagamenti`.`pagante_id`
LEFT JOIN `ospiti` 
ON `paganti`.`ospite_id` = `ospiti`.`id`
LEFT JOIN `prenotazioni` 
ON `prenotazioni`.`id` = `pagamenti`.`prenotazione_id`
HAVING `prenotazioni`.`created_at` LIKE '2018-05%';
---------------------------------------------oppure------------------------------------------
Corretto!:
SELECT `ospiti`.`name`, `ospiti`.`lastname`, `pagamenti`.`price`, `pagamenti`.`pagante_id`, `paganti`.`lastname` AS 'pagante'
FROM `prenotazioni_has_ospiti` 
INNER JOIN `ospiti`
ON `prenotazioni_has_ospiti`.`ospite_id` = `ospiti`.`id`
INNER JOIN `pagamenti`
ON `prenotazioni_has_ospiti`.`prenotazione_id` = `pagamenti`.`prenotazione_id`
INNER JOIN `paganti`
ON `pagamenti`.`pagante_id` = `paganti`.`id`
INNER JOIN `prenotazioni`
ON `prenotazioni_has_ospiti`.`prenotazione_id` = `prenotazioni`.`id`
WHERE `prenotazioni`.`created_at` LIKE '2018-05%'

4) Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano
Risposta 4:
SELECT SUM(`pagamenti`.`price`) AS 'tot_prezzi_prenotazioni_1p'
FROM `stanze` 
INNER JOIN `prenotazioni` 
ON `stanze`.`id` = `prenotazioni`.`stanza_id` 
INNER JOIN `pagamenti` 
ON `prenotazioni`.`id` = `pagamenti`.`prenotazione_id` 
WHERE `stanze`.`floor` = 1;

5) Prendi i dati di fatturazione per la prenotazione con id=7
Risposta 5:
SELECT `paganti`.`name`, `paganti`.`lastname`, `paganti`.`address` 
FROM `ospiti` 
INNER JOIN `prenotazioni_has_ospiti` 
ON `ospiti`.`id` = `prenotazioni_has_ospiti`.`ospite_id` 
INNER JOIN `paganti` 
ON `ospiti`.`id` = `paganti`.`ospite_id` 
WHERE `prenotazioni_has_ospiti`.`prenotazione_id` = 7;

6) Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate) 
Risposta 6:
SELECT `stanze`.`room_number` 
FROM `stanze` 
LEFT JOIN `prenotazioni` 
ON `stanze`.`id` = `prenotazioni`.`stanza_id` 
WHERE `prenotazioni`.`stanza_id` IS NULL;